#知识点
# @property装饰器就是负责把一个方法变成属性调用
#第一个属性(self)是get方法，用@property装饰
#第二个属性(self, score)是set方法，用@score.setter装饰


#练习
#利用@property给一个Screen对象加上width和height属性，以及一个只读属性resolution
# -*- coding: utf-8 -*-

class Screen(object):
    def __init__(self):
        self.__width = 100
        self.__height = 100
        self.__resolution = 100*100
    @property
    def width(self):
        return self.__width
    @width.setter
    def width(self, value):
        self.__width = value
    @property
    def height(self):
        return self.__height
    @width.setter
    def height(self, value):
        self.__height = value
    @property
    def resolution(self):
        return self.__height * self.__width


# test:
s = Screen()
s.width = 1024
s.height = 768
print(s.resolution)
assert s.resolution == 786432, '1024 * 768 = %d ?' % s.resolution
