#知识点
# 这种一边循环一边计算的机制，称为生成器：generator
# 第一种方法：只要把一个列表生成式的[]改成() 
# 第二种方法：把print(b)改为yield b， 如果一个函数定义中包含yield关键字，那么这个函数就不再是一个普通函数，而是一个generator
# 使用for循环调用generator，但拿不到generator的return语句的返回值。若想拿到返回值，必须捕获StopIteration错误，返回值包含在StopIteration的value中

#练习
# -*- coding: utf-8 -*-

s = (x * x for x in range(5))
print(s)
for x in s:
    print(x)

def fib(max):
    n, a, b = 0, 0, 1
    while n < max:
        yield b
        a, b = b, a + b
        n = n + 1
    return 'done'

f = fib(10)
print('fib(10):', f)
for x in f:
    print(x)

# call generator manually:
g = fib(5)
while 1:
    try:
        x = next(g)
        print('g:', x)
    except StopIteration as e:
        print('Generator return value:', e.value)
        break
